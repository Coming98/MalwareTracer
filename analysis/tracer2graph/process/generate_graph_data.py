import json
import os

def parse_tracer(file_path):
    with open(file_path, "r") as f:
        lines = f.readlines()

    block_attr_dict = {}
    edges = []
    pre_block_name = None
    for line in lines:
        line = line.strip()

        if ("block" in line.lower()): 
            block_name = line.split(":")[-1].strip()
            # 初始化属性字典
            if(block_name not in block_attr_dict): block_attr_dict[block_name] = {"trace": [], "text": line + "\n"}
            # 建立连边
            if(pre_block_name): 
                insert_edge = (pre_block_name, block_name)
                if(insert_edge not in edges): edges.append(insert_edge)
            pre_block_name = block_name
        else:
            # 提取 trace 序列
            target, value = [ item.strip() for item in line.split('<-') ]
            block_attr_dict[block_name]["trace"].append((block_name, target, value))
            block_attr_dict[block_name]["text"] += line + "\n"
    
    return block_attr_dict, edges




def main(input_path, input_name, output_dir):

    # 解析文件生成边缘关系与节点属性
    block_attr_dict, edges = parse_tracer(input_path)

    # json_dump
    json_data = {"block_attr_dict": block_attr_dict, "edges": edges}
    output_path = os.path.join(output_dir, f"{input_name}.idata.json")
    with open(output_path, 'w') as f:
        json.dump(json_data, f)
    
    return output_path

    