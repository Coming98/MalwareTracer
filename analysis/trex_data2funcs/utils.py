import pickle
import os
import json
import random
from math import floor

def split_data(datas, split_ratio=0.8):
    length = len(datas[0])
    indexes = list(range(length))
    random.shuffle(indexes)

    first_length = floor(length * split_ratio)
    indexes_first = indexes[:first_length]
    indexes_second = indexes[first_length:]

    splited_datas = []
    for data in datas:
        data_first = [ data[i] for i in indexes_first ]
        data_second = [ data[i] for i in indexes_second ]
        splited_datas.append((data_first, data_second))

    return splited_datas

def task_process(task_func, task_params, save_dir, save_name, load=True):
    save_path = save_dir + save_name
    if(os.path.exists(save_path) and load):
        result = pickle_load(save_path)
    else:
        print(f"Processing {save_name} ...")
        result = task_func(*task_params)
        if(result is None): return
        pickle_dump(result, save_path)
    return result

def load_data(file_path, split=None):
    print(f"loading data {file_path} ...")

    with open(file_path, 'r', encoding='utf-8') as f:
        lines = f.readlines()
    if(split):
        lines = [ line.strip().split(split) for line in lines ]
    else:
        lines = [ line.strip() for line in lines ]

    print(f"loading data {file_path} success")
    return lines


def pickle_load(file_path):
    print(f"loading {file_path} ...")

    with open(file_path, 'rb') as f:
        data = pickle.load(f)

    print(f"loading {file_path} success")
    return data

def pickle_dump(data, file_path):
    print(f"dumping {file_path} ...")

    with open(file_path, 'wb') as f:
        pickle.dump(data, f)

    print(f"dumping {file_path} success")

def json_load(file_path):
    print(f"loading json data {file_path} ...")

    with open(file_path, 'r', encoding="utf-8") as f:
        json_data = json.load(f)

    print(f"loading json data {file_path} Success")
    return json_data

def json_dump(data, file_path):
    print(f"dumping json data {file_path} ...")

    with open(file_path, 'w', encoding="utf-8") as f:
        json.dump(data, f, ensure_ascii=False)

    print(f"dumping json data {file_path} Success")